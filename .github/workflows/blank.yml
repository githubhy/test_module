# This is a basic workflow to help you get started with Actions

name: Update Submodules

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  repository_dispatch:
    types: [update-submodule]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  UpdateAndBuild:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
          submodules : true
      - name: Update the submodule
        run: |
          git submodule update --remote --recursive ${{ github.event.client_payload.path }}
      - name: Run git status
        id: status
        run: echo "::set-output name=status::$(git status -s)"
      - name: Add and commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -am "Update submodules at $(date "+DATE: %Y-%m-%d TIME: %H:%M:%S")"
        if: ${{ steps.status.outputs.status }}
      - run: echo ${{ github.event.client_payload.sha }}

      # Runs a single command using the runners shell
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.client_payload.ref }}
